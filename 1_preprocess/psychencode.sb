#!/bin/bash --login
########## SBATCH Lines for Resource Request ##########
 
#SBATCH --time=04:00:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --nodes=1-5                 # number of different nodes - could be an exact number or a range of nodes (same as -N)
#SBATCH --ntasks=1                  # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=2           # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem-per-cpu=30G            # memory required per allocated CPU (or core) - amount of memory (in bytes)
#SBATCH --job-name psychencode      # you can give your job a name for easier identification (same as -J)
 
########## Command Lines to Run ##########
 
module purge

#module load GCC/6.4.0-2.28 OpenMPI  ### load necessary modules, e.g.
module load icc/2016.3.210-GCC-5.4.0-2.26
module load impi/5.1.3.181
module load BEDTools

cd $SLURM_SUBMIT_DIR || exit 

##### NOTES #####
# We want to find SNPs that fall inside several enhancers
# Run from main directory
#################

mkdir psychencode
cd psychencode || exit

#Remove header row
tail -n +2 ../RawData/DER-03a_hg19_PEC_enhancers.bed > DER-03a_hg19_PEC_enhancers.bed

bedtools intersect -wa -wb -a ../RawData/NoMHC_GPHN_SNP.bed -b DER-03a_hg19_PEC_enhancers.bed > PEC_enhancers_SNP_Locations.txt

# Reduce matrix to requested format: rsID, chr, locus, ENSEMBL annotation

awk '{ print $4, $1, $2 }' PEC_enhancers_SNP_Locations.txt | sort | uniq > PEC_enhancers_final.txt
sed -i "s/$/ PEC_enhancers/g" PEC_enhancers_final.txt


# Make files for LDSR

awk '{ print $1 }' PEC_enhancers_final.txt > PEC_enhancers_LDSR.txt


scontrol show job $SLURM_JOB_ID 
